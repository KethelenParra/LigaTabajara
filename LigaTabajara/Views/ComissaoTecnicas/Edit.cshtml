@model LigaTabajara.Models.ComissaoTecnica

@{
    ViewBag.Title = "Editar Comissão Técnica";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-center mt-5">
    <div class="card shadow-sm w-100" style="max-width:600px;">
        <div class="card-header bg-success text-white">
            <h4 class="mb-0">Editar Comissão Técnica</h4>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "ComissaoTecnica", FormMethod.Post, new { @class = "m-3" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Id)
                @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

                <div class="mb-3">
                    @Html.LabelFor(m => m.Nome, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(m => m.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Nome, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Cargo, new { @class = "form-label fw-bold" })
                    @Html.EnumDropDownListFor(m => m.Cargo, new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.Cargo, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.DataNascimento, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(m => m.DataNascimento, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(m => m.DataNascimento, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.TimeId, "Time", new { @class = "form-label fw-bold" })
                    @Html.DropDownList("TimeId", null, "Selecione...", new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.TimeId, "", new { @class = "text-danger" })
                </div>

                <div class="card-footer bg-light d-flex justify-content-between">
                    @Html.ActionLink("← Voltar", "Index", null, new { @class = "btn btn-outline-secondary" })
                    <button type="submit" class="btn btn-success">Salvar Alterações</button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
