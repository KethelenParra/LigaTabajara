@model LigaTabajara.ViewModels.HomeIndexView
@using System.Linq
@using LigaTabajara.ViewModels

@{
    ViewBag.Title = "Home - Liga Tabajara";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Coleta todas as rodadas cadastradas
    var allRounds = Model.Rounds ?? new List<int>();
    int maxRound = allRounds.Any() ? allRounds.Max() : 0;
    int minRound = allRounds.Any() ? allRounds.Min() : 1;
    int current = Model.Round ?? 0; // 0 = Geral

    // Calcula destino/estado dos botões
    int? prevRound = null;
    int? nextRound = null;
    if (current > 0)
    {
        // Da rodada 1 volta p/ Geral (null), senão decrementar
        prevRound = (current == minRound) ? (int?)null : current - 1;
    }
    if (current < maxRound)
    {
        nextRound = current + 1;
    }
    bool prevDisabled = (current == 0);
    bool nextDisabled = (current >= maxRound);
}

<style>
    .table-classificacao {
        border-collapse: separate;
        border-spacing: 0;
    }

        .table-classificacao thead {
            background-color: #006400;
            color: #fff;
        }

        .table-classificacao tbody tr:nth-child(odd) {
            background-color: #f8f9fa;
        }

        .table-classificacao tbody tr:hover {
            background-color: #e2e6ea;
        }

        .table-classificacao a {
            text-decoration: none;
            color: #004085;
            font-weight: 500;
        }

            .table-classificacao a:hover {
                text-decoration: underline;
            }


        .table-classificacao tbody tr.tr-lb > td:first-child {
            border-left: .2rem solid #0d6efd;
        }

        .table-classificacao tbody tr.tr-q > td:first-child {
            border-left: .2rem solid #fd7e14;
        }

        .table-classificacao tbody tr.tr-s > td:first-child {
            border-left: .2rem solid #198754;
        }

        .table-classificacao tbody tr.tr-r > td:first-child {
            border-left: .2rem solid #dc3545;
        }

    .card-agenda {
        border: none;
        border-radius: .5rem;
        box-shadow: 0 .125rem .25rem rgba(0,0,0,.075);
    }

        .card-agenda .card-header {
            background-color: #006400;
            color: #fff;
            font-weight: 600;
            font-size: 1.25rem;
            padding: .75rem 1.25rem;
        }

    .agenda-nav .btn-nav {
        display: inline-block;
        border: 2px solid #fff;
        border-radius: 50px;
        color: #fff !important;
        background: transparent;
        padding: .5rem 1.25rem;
        font-weight: 600;
        margin: 0 .25rem;
        transition: background-color .2s;
        text-decoration: none;
    }

        .agenda-nav .btn-nav:hover {
            background-color: rgba(255,255,255,0.15);
        }

        .agenda-nav .btn-nav.disabled {
            opacity: .5;
            pointer-events: none;
        }

    .table-agenda thead {
        background-color: #228b22;
        color: #fff;
    }

    .table-agenda tbody tr:nth-child(odd) {
        background-color: #f8f9fa;
    }

    .table-agenda tbody tr:hover {
        background-color: #e2e6ea;
    }

    .btn-view {
        background-color: #228b22;
        border-color: #1a6b1a;
        color: #fff;
    }

        .btn-view:hover {
            background-color: #196619;
            color: #fff;
        }

    .legend-grid {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-top: 2rem;
    }

    .legend-col {
        display: flex;
        flex-direction: column;
        flex: 1;
        max-width: 50%;
    }

        .legend-col h5 {
            font-size: 1rem;
            margin-bottom: .5rem;
        }

        .legend-col .legend-item {
            display: flex;
            align-items: center;
            margin-bottom: .5rem;
            font-size: .9rem;
        }

    .legend-color {
        width: 4px;
        height: 1.25rem;
        display: inline-block;
        margin-right: .5rem;
    }

    .legend-icon {
        font-size: 1.2rem;
        margin-right: .5rem;
        line-height: 1;
    }

    .card-resumo {
        background-color: #228b22;
    }
</style>

<h2 class="mb-4">Liga Tabajara de Futebol</h2>
@if (Model.LeagueIsApto)
{
    <div class="alert alert-success text-center">
        🏅 <strong>Liga apta para iniciar!</strong> 
    </div>
}

@if (Model.CampeonatoConcluido)
{
    <!-- Tela de comemoração -->
    <div class="alert alert-success text-center py-5 mb-5">
        <h1>🎉 Parabéns, @Model.Campeao.Time.Nome é o campeão! 🏆</h1>
        <p>Pontuação final: <strong>@Model.Campeao.Points</strong> pontos</p>
        <img src="~/images/trofeu.png" alt="Troféu" style="max-width:200px; margin-top:1rem;" />
    </div>

    // filtra apenas partidas com resultado
    var concluídas = Model.Schedule
        .Where(p => p.GolsMandante.HasValue && p.GolsVisitante.HasValue)
        .ToList();

    var totalPartidas = concluídas.Count;
    var totalGols = concluídas.Sum(p => p.GolsMandante.Value + p.GolsVisitante.Value);
    var mediaGols = totalPartidas > 0
        ? Math.Round((double)totalGols / totalPartidas, 2)
        : 0;

    var maisVitorias = Model.TeamStats
        .OrderByDescending(t => t.Wins)
        .FirstOrDefault();

    var maisEmpates = Model.TeamStats
        .OrderByDescending(t => t.Draws)
        .FirstOrDefault();

    var maisDerrotas = Model.TeamStats
        .OrderByDescending(t => t.Losses)
        .FirstOrDefault();


    <div class="card mb-5">
        <div class="card-header text-white card-resumo">
            Resumo do Campeonato
        </div>
        <ul class="list-group list-group-flush">
            <li class="list-group-item">
                <strong>Rodadas disputadas:</strong> @Model.Rounds.Max()
            </li>
            <li class="list-group-item">
                <strong>Partidas disputadas:</strong> @totalPartidas
            </li>
            <li class="list-group-item">
                <strong>Gols marcados:</strong> @totalGols
            </li>
            <li class="list-group-item">
                <strong>Média de gols/partida:</strong> @mediaGols
            </li>
            <li class="list-group-item">
                <strong>Artilheiro:</strong>
                @Model.TopScorer.JogadorNome (@Model.TopScorer.TotalGols) gols
            </li>
            <li class="list-group-item">
                <strong>Time com mais vitórias:</strong>
                @maisVitorias.Time.Nome (@maisVitorias.Wins) vitórias
            </li>
            <li class="list-group-item">
                <strong>Time com mais empates:</strong>
                @maisEmpates.Time.Nome (@maisEmpates.Draws) empates
            </li>
            <li class="list-group-item">
                <strong>Time com mais derrotas:</strong>
                @maisDerrotas.Time.Nome (@maisDerrotas.Losses) derrotas
            </li>
        </ul>
    </div>
} @* fecha o if *@

<!-- ================
     Classificação
     ================ -->
<section>
    <h3>Classificação</h3>
    <table class="table table-bordered table-classificacao mb-3">
        <thead>
            <tr>
                <th class="text-center" style="width:5%;">#</th>
                <th style="width:15%;">Time</th>
                <th class="text-center" style="width:7%;">Jogos</th>
                <th class="text-center" style="width:7%;">Vitórias</th>
                <th class="text-center" style="width:7%;">Empates</th>
                <th class="text-center" style="width:7%;">Derrotas</th>
                <th class="text-center" style="width:7%;">Pontos</th>
                <th class="text-center" style="width:10%;">Saldo de Gols</th>A
                <th class="text-center" style="width:10%;">Status</th>
                <th class="text-center" style="width:15%;">Últimas 5</th>
            </tr>
        </thead>
        <tbody>
            @{
                var pos = 1;
                var total = Model.TeamStats.Count;
            }
            @foreach (var stat in Model.TeamStats)
            {
                // agora estamos em C# puro, não precisa de @{
                string cssClass;
                if (pos <= 4)
                {
                    cssClass = "tr-lb";      // 1–4 azul
                }
                else if (pos == 5)
                {
                    cssClass = "tr-q";       // 5 laranja
                }
                else if (pos <= 12)
                {
                    cssClass = "tr-s";       // 6–12 verde
                }
                else if (pos >= total - 3)
                {
                    cssClass = "tr-r";       // 17–20 vermelho
                }
                else
                {
                    cssClass = "";           // 13–16 sem faixa
                }

                <tr class="@cssClass">
                    <td class="text-center">@pos</td>
                    <td>
                        @Html.ActionLink(
                            stat.Time.Nome,
                            "Details", "Times",
                            new { id = stat.Time.Id },
                            new { @class = "text-decoration-none" }
                        )
                    </td>
                    <td class="text-center">@stat.Games</td>
                    <td class="text-center">@stat.Wins</td>
                    <td class="text-center">@stat.Draws</td>
                    <td class="text-center">@stat.Losses</td>
                    <td class="text-center">@stat.Points</td>
                    <td class="text-center">
                        @Html.ActionLink(
                            stat.GoalDifference.ToString(),
                            "Index", "EstatisticaJogoes",
                            new { teamId = stat.Time.Id },
                            new { @class = "text-decoration-none" }
                        )
                    </td>
                    <td class="text-center">
                        @(stat.IsApto ? "Apto" : "Não Apto")
                    </td>
                    <td class="text-center">
                        @{
                            var last = stat.Last5Results ?? Enumerable.Empty<ResultadoEnum>();
                            var empty = 5 - last.Count();
                        }
                        @foreach (var r in last)
                        {
                            if (r == ResultadoEnum.Vitoria)
                            {
                                <i class="bi bi-check-circle-fill text-success me-1"></i>
                            }
                            else if (r == ResultadoEnum.Empate)
                            {
                                <i class="bi bi-dash-circle-fill text-warning me-1"></i>
                            }
                            else
                            {
                                <i class="bi bi-x-circle-fill text-danger me-1"></i>
                            }
                        }
                        @for (int i = 0; i < empty; i++)
                        {
                            <i class="bi bi-circle text-muted me-1"></i>
                        }
                    </td>
                </tr>
                pos++;
            }
        </tbody>
    </table>
</section>

<section class="legend-section">
    <div class="legend-grid">
        <!-- coluna 1: classificação -->
        <div class="legend-col">
            <h5>Qualificação / Rebaixamento</h5>
            <div class="legend-item">
                <span class="legend-color" style="background-color:#0d6efd;"></span>
                Fase de grupos da CONMEBOL Libertadores
            </div>
            <div class="legend-item">
                <span class="legend-color" style="background-color:#fd7e14;"></span>
                Qualificatórias da CONMEBOL Libertadores
            </div>
            <div class="legend-item">
                <span class="legend-color" style="background-color:#198754;"></span>
                Fase de grupos da CONMEBOL Sudamericana
            </div>
            <div class="legend-item">
                <span class="legend-color" style="background-color:#dc3545;"></span>
                Rebaixamento
            </div>
        </div>

        <!-- coluna 2: resultados -->
        <div class="legend-col">
            <h5>Últimas 5 partidas</h5>
            <div class="legend-item">
                <i class="bi bi-check-circle-fill text-success legend-icon"></i>
                Vitórias
            </div>
            <div class="legend-item">
                <i class="bi bi-dash-circle-fill text-secondary legend-icon"></i>
                Empates
            </div>
            <div class="legend-item">
                <i class="bi bi-x-circle-fill text-danger legend-icon"></i>
                Derrotas
            </div>
            <div class="legend-item">
                <i class="bi bi-circle text-muted legend-icon"></i>
                Não jogou
            </div>
        </div>
    </div>
</section>

<!-- ============
     Agenda
     ============ -->
<section id="schedule" class="mt-5">
    <div class="card card-agenda">
        <div class="card-header d-flex justify-content-between align-items-center">
            <strong>
                @(Model.Round.HasValue
                  ? $"Agenda de Partidas — Rodada {Model.Round}"
                  : "Agenda de Partidas — Geral")
            </strong>
            <div class="agenda-nav">
                <a class="btn-nav @(prevDisabled ? "disabled" : "")"
                   href="@( !prevDisabled
                            ? Url.Action("Index", new { round = prevRound }) + "#schedule"
                            : "#" )"
                   aria-disabled="@prevDisabled">
                    ← Rodada Anterior
                </a>
                <a class="btn-nav @(nextDisabled ? "disabled" : "")"
                   href="@( !nextDisabled
                            ? Url.Action("Index", new { round = nextRound }) + "#schedule"
                            : "#" )"
                   aria-disabled="@nextDisabled">
                    Próxima Rodada →
                </a>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-agenda mb-0">
                    <thead>
                        <tr>
                            <th style="width:12%;">Data</th>
                            <th style="width:20%;">Mandante</th>
                            <th class="text-center" style="width:15%;">Placar</th>
                            <th style="width:20%;">Visitante</th>
                            <th style="width:25%;">Resultado</th>
                            <th class="text-center" style="width:8%;">Detalhes</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var partida in Model.Schedule)
                        {
                            <tr>
                                <td>@partida.DataPartida.ToString("dd/MM/yyyy")</td>
                                <td>@partida.TimeMandante.Nome</td>
                                <td class="text-center">
                                    @(partida.GolsMandante.HasValue
                                        ? partida.GolsMandante.Value.ToString()
                                        : "-")
                                    x
                                    @(partida.GolsVisitante.HasValue
                                        ? partida.GolsVisitante.Value.ToString()
                                        : "-")
                                </td>
                                <td>@partida.TimeVisitante.Nome</td>
                                <td>
                                    @if (partida.GolsMandante.HasValue && partida.GolsVisitante.HasValue)
                                    {
                                        if (partida.GolsMandante > partida.GolsVisitante)
                                        {
                                            <span class="text-success">
                                                Vitória do @partida.TimeMandante.Nome
                                            </span>
                                        }
                                        else if (partida.GolsMandante < partida.GolsVisitante)
                                        {
                                            <span class="text-danger">
                                                Vitória do @partida.TimeVisitante.Nome
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-warning">Empate</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted">–</span>
                                    }
                                </td>
                                <td class="text-center">
                                    @Html.ActionLink(
                                        "Ver", "Details", "Partidas",
                                        new { id = partida.Id },
                                        new { @class = "btn btn-view btn-sm" }
                                    )
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>