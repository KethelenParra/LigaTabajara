@model LigaTabajara.Models.Jogador

@{
    ViewBag.Title = "Novo Jogador";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-center mt-5">
    <div class="card shadow-sm" style="width:100%; max-width:600px;">
        <div class="card-header bg-success text-white">
            <h4 class="mb-0">Novo Jogador</h4>
        </div>

        @using (Html.BeginForm("Create", "Jogadores", FormMethod.Post, new { @class = "m-3" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

            <div class="row">
                <div class="col-6 mb-3">
                    @Html.LabelFor(m => m.Name, "Nome", new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "nome" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>

                <div class="col-6 mb-3">
                    @Html.LabelFor(m => m.TimeId, "Time", new { @class = "form-label fw-bold" })
                    @Html.DropDownListFor(m => m.TimeId, (SelectList)ViewBag.TimeId, "Selecione...", new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.TimeId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-6 mb-3">
                    @Html.LabelFor(m => m.DataNascimento, "Data de Nascimento", new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.DataNascimento, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(m => m.DataNascimento, "", new { @class = "text-danger" })
                </div>

                <div class="col-6 mb-3">
                    @Html.LabelFor(m => m.Nacionalidade, new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.Nacionalidade, new { @class = "form-control", placeholder = "Nascionalidade" })
                    @Html.ValidationMessageFor(m => m.Nacionalidade, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-6 mb-3">
                    @Html.LabelFor(m => m.NumCamisa, "Nº Camisa", new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.NumCamisa, new { @class = "form-control", type = "number", min = "1", placeholder = "Nº Camisa" })
                    @Html.ValidationMessageFor(m => m.NumCamisa, "", new { @class = "text-danger" })
                </div>
                <div class="col-6 mb-3">
                    @Html.LabelFor(m => m.PePreferido, "Pé Preferido", new { @class = "form-label fw-bold" })
                    @Html.EnumDropDownListFor(m => m.PePreferido, new { @class = "form-select", placeholder = "Pé preferido" })
                    @Html.ValidationMessageFor(m => m.PePreferido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-6 mb-3">
                    @Html.LabelFor(m => m.Altura, new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.Altura, "{0:0.00}", new { @class = "form-control", type = "text", placeholder = "0,00" })
                    @Html.ValidationMessageFor(m => m.Altura, "", new { @class = "text-danger" })
                </div>
                <div class="col-6 mb-3">
                    @Html.LabelFor(m => m.Peso, new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.Peso, "{0:0.00}", new { @class = "form-control", type = "text", placeholder = "00" })
                    @Html.ValidationMessageFor(m => m.Peso, "", new { @class = "text-danger" })
                </div>
            </div>

              <div class="mb-3">
                @Html.LabelFor(m => m.Posicao, "Posição", new { @class = "form-label fw-bold" })
                @Html.EnumDropDownListFor(m => m.Posicao, new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.Posicao, "", new { @class = "text-danger" })
            </div>

            <div class="card-footer bg-light d-flex justify-content-between">
                @Html.ActionLink("← Voltar", "Index", null, new { @class = "btn btn-outline-secondary" })
                <button type="submit" class="btn btn-success">Criar Jogador</button>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        // este script PRECISA vir DEPOIS do jqueryval
        $.validator.methods.number = function (value, element) {
            // se o usuário usar vírgula, troca por ponto
            var val = value.replace(",", ".");
            return this.optional(element)
                || /^-?\d+(\.\d+)?$/.test(val);
        };
    </script>

}
