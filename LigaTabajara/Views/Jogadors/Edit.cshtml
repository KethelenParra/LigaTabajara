@model LigaTabajara.Models.Jogador

@{
    ViewBag.Title = "Editar Jogador";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-center mt-5">
    <div class="card shadow-sm w-100" style="max-width:600px;">
        <div class="card-header bg-success text-white">
            <h4 class="mb-0">Editar Jogador</h4>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "Jogadores", FormMethod.Post, new { @class = "m-3" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.ID)
                @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

                <div class="mb-3">
                    @Html.LabelFor(m => m.Name, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.DataNascimento, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(m => m.DataNascimento, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.DataNascimento, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Nacionalidade, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(m => m.Nacionalidade, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Nacionalidade, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Posicao, new { @class = "form-label fw-bold" })
                    @Html.EnumDropDownListFor(m => m.Posicao, new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.Posicao, "", new { @class = "text-danger" })
                </div>

                <div class="row">
                    <div class="col-6 mb-3">
                        @Html.LabelFor(m => m.NumCamisa, new { @class = "form-label fw-bold" })
                        @Html.EditorFor(m => m.NumCamisa, new { htmlAttributes = new { @class = "form-control", @type = "number", min = "1" } })
                        @Html.ValidationMessageFor(m => m.NumCamisa, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-6 mb-3">
                        @Html.LabelFor(m => m.Altura, new { @class = "form-label fw-bold" })
                        @Html.EditorFor(m => m.Altura, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Altura, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-6 mb-3">
                        @Html.LabelFor(m => m.Peso, new { @class = "form-label fw-bold" })
                        @Html.EditorFor(m => m.Peso, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Peso, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-6 mb-3">
                        @Html.LabelFor(m => m.PePreferido, new { @class = "form-label fw-bold" })
                        @Html.EnumDropDownListFor(m => m.PePreferido, new { @class = "form-select" })
                        @Html.ValidationMessageFor(m => m.PePreferido, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.TimeId, "Time", new { @class = "form-label fw-bold" })
                    @Html.DropDownList("TimeId", null, "Selecione...", new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.TimeId, "", new { @class = "text-danger" })
                </div>

                <div class="card-footer bg-light d-flex justify-content-between">
                    @Html.ActionLink("← Voltar", "Index", null, new { @class = "btn btn-outline-secondary" })
                    <button type="submit" class="btn btn-success">Salvar Alterações</button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
